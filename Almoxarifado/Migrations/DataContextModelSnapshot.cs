// <auto-generated />
using System;
using Almoxarifado.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Almoxarifado.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Almoxarifado.Models.Competencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Competencia");
                });

            modelBuilder.Entity("Almoxarifado.Models.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empenho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntradaTipoId")
                        .HasColumnType("int");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntradaTipoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Entrada");
                });

            modelBuilder.Entity("Almoxarifado.Models.EntradaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntradaId")
                        .HasColumnType("int");

                    b.Property<float>("PrecoMedio")
                        .HasColumnType("real");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("EntradaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("EntradaItem");
                });

            modelBuilder.Entity("Almoxarifado.Models.EntradaTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntradaTipo");
                });

            modelBuilder.Entity("Almoxarifado.Models.Estoque", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoMedio")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecoTotal")
                        .HasColumnType("money");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.HasKey("ProdutoId");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("Almoxarifado.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("Almoxarifado.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CAEDespesa")
                        .HasColumnType("bigint");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<long?>("ContaContabil")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<int>("PontoPedido")
                        .HasColumnType("int");

                    b.Property<int?>("PrudutoGrupoId")
                        .HasColumnType("int");

                    b.Property<int?>("PrudutoUnidadeId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrudutoGrupoId");

                    b.HasIndex("PrudutoUnidadeId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Almoxarifado.Models.ProdutoGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProdutoGrupo");
                });

            modelBuilder.Entity("Almoxarifado.Models.ProdutoUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("ProdutoUnidade");
                });

            modelBuilder.Entity("Almoxarifado.Models.Saida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaidaTipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SaidaTipoId");

                    b.ToTable("Saida");
                });

            modelBuilder.Entity("Almoxarifado.Models.SaidaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("PrecoMedio")
                        .HasColumnType("real");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<int>("SaidaId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SaidaId");

                    b.ToTable("SaidaItem");
                });

            modelBuilder.Entity("Almoxarifado.Models.SaidaTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SaidaTipo");
                });

            modelBuilder.Entity("Almoxarifado.Models.Entrada", b =>
                {
                    b.HasOne("Almoxarifado.Models.EntradaTipo", "EntradaTipo")
                        .WithMany()
                        .HasForeignKey("EntradaTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Almoxarifado.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntradaTipo");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Almoxarifado.Models.EntradaItem", b =>
                {
                    b.HasOne("Almoxarifado.Models.Entrada", "Entrada")
                        .WithMany()
                        .HasForeignKey("EntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Almoxarifado.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Almoxarifado.Models.Estoque", b =>
                {
                    b.HasOne("Almoxarifado.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Almoxarifado.Models.Produto", b =>
                {
                    b.HasOne("Almoxarifado.Models.ProdutoGrupo", "PrudutoGrupo")
                        .WithMany()
                        .HasForeignKey("PrudutoGrupoId");

                    b.HasOne("Almoxarifado.Models.ProdutoUnidade", "PrudutoUnidade")
                        .WithMany()
                        .HasForeignKey("PrudutoUnidadeId");

                    b.Navigation("PrudutoGrupo");

                    b.Navigation("PrudutoUnidade");
                });

            modelBuilder.Entity("Almoxarifado.Models.Saida", b =>
                {
                    b.HasOne("Almoxarifado.Models.SaidaTipo", "SaidaTipo")
                        .WithMany()
                        .HasForeignKey("SaidaTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaidaTipo");
                });

            modelBuilder.Entity("Almoxarifado.Models.SaidaItem", b =>
                {
                    b.HasOne("Almoxarifado.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Almoxarifado.Models.Saida", "Saida")
                        .WithMany()
                        .HasForeignKey("SaidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Saida");
                });
#pragma warning restore 612, 618
        }
    }
}
